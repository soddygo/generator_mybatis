package ${package.Controller};

import java.util.Map;
import com.dmall.datalite.rdb.criterion.Db;
import com.dmall.datalite.rdb.criterion.DbQueryCriterion;
import ${package.Entity}.${entity};
import ${package.Service}.${entity}Service;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;

import io.swagger.annotations.ApiParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.http.MediaType;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.List;

/**
 * <p>
 * ${table.comment}  前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@Api(value = "${table.comment}接口", description = "${table.comment}接口")
#if(${superControllerClass})
public class ${table.controllerName} {
#else
public class ${table.controllerName} {
#end

	private static Logger logger=LoggerFactory.getLogger(${table.controllerName}.class);

	@Autowired
	private ${entity}Service ${cfg.capitalName}Service;

	@GetMapping(value = "/query/list")
	@ApiOperation(value = "查询${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
	public List<${entity}> query(HttpServletRequest request) {
        try {
        	DbQueryCriterion criterion= Db.build(${entity}.class).eq("yn",1);
            List<${entity}> ${cfg.capitalName}List=${cfg.capitalName}Service.getList(criterion);
            return ${cfg.capitalName}List;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
	}


	@GetMapping(value = "/query/view")
	@ApiOperation(value = "${table.comment}详情", produces = MediaType.APPLICATION_JSON_VALUE)
	public Object get(HttpServletRequest request,@ApiParam(required = true, value = "id")Long id ) {
        try {
        	DbQueryCriterion criterion= Db.build(${entity}.class).eq("yn",1);
			${entity} ${cfg.capitalName}=${cfg.capitalName}Service.getOne(criterion);
            return ${cfg.capitalName};
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
	}

	@PostMapping
	@ApiOperation(value = "修改${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
	public Object update(HttpServletRequest request,@RequestBody ${entity} ${cfg.capitalName}) {
        try {
			DbQueryCriterion criterion= Db.build(${entity}.class).eq("yn",1).eq("id",${cfg.capitalName}.getId());
			return ${cfg.capitalName}Service.update(${cfg.capitalName},criterion);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
	}


	@DeleteMapping
	@ApiOperation(value = "删除${table.comment}", produces = MediaType.APPLICATION_JSON_VALUE)
	public Object delete(HttpServletRequest request,Long id) {
            return null;
	}
}