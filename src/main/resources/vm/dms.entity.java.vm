package ${package.Entity};

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.io.Serializable;
##import com.dmall.datalite.rdb.annotation.DbTable;
import java.util.Date;


/**
 * <p>
 * ${table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
##@DbTable("${table.name}")
###if(${table.convert})
##@TableName("${table.name}")
###end
#if(${superEntityClass})
@SuppressWarnings("serial")
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable {
    private static final long serialVersionUID = 1L;
#end

#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
#if(${field.convert})
#if(${field.keyFlag})
##	@TableId("${field.name}")
#else
##	@TableField("${field.name}")
#end
#end
	private ${field.propertyType} ${field.propertyName};
#end


#if(${activeRecord})
	protected Serializable pkVal() {
#if(${keyPropertyName})
		return this.${keyPropertyName};
#else
		return this.id;
#end
	}

#end
}